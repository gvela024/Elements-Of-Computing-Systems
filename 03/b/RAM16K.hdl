// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
      DMux4Way(
         in = load,
         sel = address[12..13],
         a = ramPage0Load,
         b = ramPage1Load,
         c = ramPage2Load,
         d = ramPage3Load
      );

      RAM4K(in = in, load = ramPage0Load, address = address[0..11], out = page0);
      RAM4K(in = in, load = ramPage1Load, address = address[0..11], out = page1);
      RAM4K(in = in, load = ramPage2Load, address = address[0..11], out = page2);
      RAM4K(in = in, load = ramPage3Load, address = address[0..11], out = page3);

      Mux4Way16(
        a = page0,
        b = page1,
        c = page2,
        d = page3,
        sel = address[12..13],
        out = out
      );
}
