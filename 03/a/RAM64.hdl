// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */


  5 4 3 2 1 0
  0 0 0 0 0 0 = 0x0000
  0 0 0 0 0 1 = 0x0001
  0 0 0 0 1 0 = 0x0002
  0 0 0 0 1 1 = 0x0003

  1 1 1 1 0 1 = 0xfffd
  1 1 1 1 1 0 = 0xfffe
  1 1 1 1 1 1 = 0xffff


CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
      DMux8Way(
         in = load,
         sel[2] = address[5],
         sel[1] = address[4],
         sel[0] = address[3],
         a = ,
         b = ,
         c = ,
         d = ,
         e = ,
         f = ,
         g = ,
         h = );
}
